<?php

use App\Models\Category;
use Carbon\Carbon;
use Tests\TestCase;

class CategoryOrmTest extends TestCase
{

    public function testCanBuildCategory(): Category
    {
        $now = Carbon::parse('now')->toDateTime();
        $category = new Category([
            'id' => 1,
            'shop_id' => 1,
            'name' => 'dummy category',
            'created_at' => $now
        ]);

        $this->assertTrue($category->getId() == 1);
        $this->assertTrue($category->getShopId() == 1);
        $this->assertTrue($category->getName() == 'dummy category');
        $this->assertEqualsWithDelta($category->getCreatedAt()->format('Y-m-d H:i:s'), $now->format('Y-m-d H:i:s'), 1, '');
        return $category;
    }

    /**
     * @depends testCanBuildCategory
     * @param Category $category
     * @return Category
     */
    public function testCanPersist(Category $category): Category
    {
        $this->expectNotToPerformAssertions();
        Category::persist($category);

        return $category;
    }

    /**
     * @depends testCanPersist
     * @param Category $category
     * @return void
     */
    public function testCanFind(Category $category)
    {
        $found_category = Category::where('id', $category->getId())->first();
        $this->assertTrue($category->getId() == $found_category->getId());
        $this->assertTrue($category->getShopId() == $found_category->getShopId());
        $this->assertTrue($category->getName() == $found_category->getName());
        $this->assertEqualsWithDelta($category->getCreatedAt()->format('Y-m-d H:i:s'), $found_category->getCreatedAt()->format('Y-m-d H:i:s'), 1, '');

        $found_category->delete();

    }
    protected function setUp(): void
    {
        parent::setUp();
        Schema::disableForeignKeyConstraints();
    }

    protected function tearDown(): void
    {
        Schema::enableForeignKeyConstraints();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
