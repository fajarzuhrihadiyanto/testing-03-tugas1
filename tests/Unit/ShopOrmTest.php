<?php

use App\Models\Shop;
use Carbon\Carbon;
use Tests\TestCase;

class ShopOrmTest extends TestCase
{

    public function testCanBuildShop(): Shop
    {
        $now = Carbon::parse('now')->toDateTime();
        $shop = new Shop([
            'id' => 1,
            'user_id' => 1,
            'name' => 'dummy shop',
            'image' => '',
            'created_at' => $now
        ]);
        $this->assertTrue($shop->getId() == 1);
        $this->assertTrue($shop->getUserId() == 1);
        $this->assertTrue($shop->getName() == 'dummy shop');
        $this->assertTrue($shop->getImage() == '');
        $this->assertEqualsWithDelta($shop->getCreatedAt()->format('Y-m-d H:i:s'), $now->format('Y-m-d H:i:s'), 1, '');
        return $shop;
    }

    /**
     * @depends testCanBuildShop
     * @param Shop $shop
     * @return Shop
     */
    public function testCanPersist(Shop $shop): Shop
    {
        $this->expectNotToPerformAssertions();
        Shop::persist($shop);

        return $shop;
    }

    /**
     * @depends testCanPersist
     * @param Shop $shop
     * @return void
     */
    public function testCanFind(Shop $shop)
    {
        $found_shop = Shop::where('id', $shop->getId())->first();
        $this->assertTrue($shop->getId() == $found_shop->getId());
        $this->assertTrue($shop->getUserId() == $found_shop->getUserId());
        $this->assertTrue($shop->getName() == $found_shop->getName());
        $this->assertTrue($shop->getImage() == $found_shop->getImage());
        $this->assertEqualsWithDelta($shop->getCreatedAt()->format('Y-m-d H:i:s'), $found_shop->getCreatedAt()->format('Y-m-d H:i:s'), 1, '');

        $found_shop->delete();

    }
    protected function setUp(): void
    {
        parent::setUp();
        Schema::disableForeignKeyConstraints();
    }

    protected function tearDown(): void
    {
        Schema::enableForeignKeyConstraints();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
